# ###############################################################################
# Exemple de bot discord par Blueyescat
# Traducteur français: AlexLew <https://github.com/AlexLew95>
#
# Inclut des un bon système d'évaluation.
# 
# Requiert les addons Vixio et TuSKe Skript
# ###############################################################################

options:
	# Token du bot
	#
	# Obtient le token du bot à partir de https://discordapp.com/developers
	token: "MjE2OTIxNDEyNzgxMjExNjQ4.xXXXxxxXXxXxXXXxXXxxxXxxXXxxXxXXXXxxXxxXXXxxxx"
	
	# Ce n'est pas important à changer (Ce n'est pas le nom d'utilisateur) et les deux valeurs doivent être les mêmes
	bot: "BotName" 
	botName: BotName

	# Les prefix des commandes
	#
	# Si vous voulez utiliser un emoji en tant que prefix, recupérer le caractère unicode de cet emoji sur https://emojipedia.org
	# Par exemple :apple: Sur Discord: "🍎"
	#
	# Si vous voulez utiliser une mention en tant que prefix, utilisez: <@id>
	prefixes: !
	
	# L'id des administrateurs
	# Pour plus qu'un admin, vous devez utiliser "or" au lieu de "and" dans la liste.
	admins: "012345678910111213", "312111019876543210" or "981713114610522013"

on load:
	if {@bot} parsed as bot is not set: 
		login to {@token} with name {@bot}
	set status of {@bot} to online

on unload:
	set status of {@bot} to do not disturb

discord command evaluate <text>:
	aliases: eval
	prefixes: {@prefixes}
	bots: {@botName}
	trigger:
		if id of event-user is {@admins}:
			set {_code} to regex replace "^\s+" with "" in arg-1
			if first 3 characters of {_code} is "```":
				if last 3 characters of {_code} is "```":
					if first 5 characters of {_code} is "```vb":  # Syntax colorer VB.Net pour le bloc de code
						set {_code} to subtext of {_code} from character 7 to (length of {_code} - 3)
					else:
						set {_code} to subtext of {_code} from character 4 to (length of {_code} - 3)
				else:
					create embed:
						set description of the embed to ":x: Bloc de code invalide!"
						set color of the embed to color from rgb 255, 0, 0
					reply with the last created embed
					stop
			
			evaluate logging in {_errors::*}: {_code}
			if {_errors::*} is set:
				loop {_errors::*}:
					set {_parse::*} to loop-value parsed as "%text% \(TuSKe\/evaluate.sk, line %integer%\: %text%'\)"
					add "**Ligne %{_parse::2}%:** *%{_parse::1}%*%nl%**>** ``%{_parse::3}%``" to {_lines::*}
				create embed:
					set title of the embed to ":x: Erreurs Evalues (%size of {_errors::*}%)"
					set description of the embed to join {_lines::*} with new line
					set color of the embed to color from rgb 255, 0, 0
				reply with the last created embed
		else:
			reply with ":x: Seul les administrateurs peuvent utiliser cette commande!"

discord command purge <text>:
	aliases: purgemessages, clear, clearmessages
	prefixes: {@prefixes}
	executable in: guild
	bots: {@botName}
	trigger:
		if id of event-user is {@admins}:
			set {_count} to arg-1 parsed as number
			if {_count} is greater than 0:
				grab the last {_count} messages in event-channel
				purge the grabbed messages with event-bot
				reply with ":white_check_mark: Purgé avec succès %{_count}% message%(""s"") if {_count} is greater than 1, else """"%!" and store the message in {_message}
				wait 2 seconds
				delete random message of {_message} with event-bot
			else:
				reply with ":x: Commande correct:  **%used prefix%**%used command% **<**un nombre positif**>**"
		else:
			reply with ":x: Seul les administrateurs peuvent utiliser cette commande!"